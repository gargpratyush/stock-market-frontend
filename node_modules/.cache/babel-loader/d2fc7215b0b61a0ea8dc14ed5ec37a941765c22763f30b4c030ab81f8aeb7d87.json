{"ast":null,"code":"var _jsxFileName = \"/Users/pratyushgarg/Downloads/Web Development/final-density/density-hack-an-intern-flexbox/front-end/src/components/OrderPage/BuyOrSell.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport UserContext from '../../Context/UserContext';\nimport { useContext } from 'react';\nimport { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BuyOrSell() {\n  _s();\n  const usercontext = useContext(UserContext);\n  const {\n    users,\n    orderBuy,\n    updateAll\n  } = usercontext;\n  const [transactionType, setTransactionType] = useState();\n  const [orderType, setOrderType] = useState(\"Market\");\n  const [user, setUser] = useState();\n  const [StockAmount, setStockAmount] = useState();\n  const [PriceLim, setPriceLim] = useState();\n  //   const [data, setData] = useState({});\n  let data = {};\n  let checkBalance;\n  let checkPrice;\n  let checkNoOfStocks;\n  const changeOrderType = () => {\n    setOrderType(document.getElementById(\"OrderType\").value);\n  };\n  const changeTransactionType = () => {\n    setTransactionType(document.getElementById(\"buyorsell\").value);\n  };\n  const changeUser = () => {\n    setUser(document.getElementById(\"IdforselectUser\").value);\n  };\n  const handleBuySell = () => {\n    if (!transactionType) toast.info('Please choose buy or sell.');else if (!user) toast.info('Please choose a user for the transaction.');else if (orderType === 'Limit' && !PriceLim) toast.info('Please set a price limit for Limit type transactions');else if (!StockAmount) toast.info('Please provide a stock amount.');else {\n      if (transactionType === 'Buy') {\n        if (orderType === \"Limit\") {\n          users.map(userind => {\n            if (userind.user_id == parseInt(user)) {\n              console.log(userind.user_name);\n              checkBalance = userind.balance;\n            }\n          });\n          if (checkBalance >= StockAmount * PriceLim) {\n            data = {\n              buyer_id: user,\n              max_buying_price: orderType === 'Limit' ? PriceLim : -1,\n              stocks_quantity: StockAmount\n            };\n            axios.post('transaction/place/buy', data).then(() => {\n              toast.success('Transaction Successful');\n              updateAll();\n            }).catch(error => {\n              toast.error(error.response.data.msg);\n              console.log(error);\n            });\n          } else {\n            toast.error(\"Insufficient Balanace\");\n          }\n        } else if (orderType === \"Market\") {\n          users.map(userind2 => {\n            if (userind2.user_id == parseInt(user)) {\n              console.log(userind2.user_name);\n              checkBalance = userind2.balance;\n            }\n          });\n          checkPrice = orderBuy[0].max_buying_price;\n          orderBuy.map(orderbuy => {\n            if (checkPrice < orderbuy.max_buying_price) {\n              checkPrice = orderbuy.max_buying_price;\n            }\n          });\n          if (checkBalance >= StockAmount * checkPrice) {\n            data = {\n              buyer_id: user,\n              max_buying_price: orderType === 'Limit' ? PriceLim : -1,\n              stocks_quantity: StockAmount\n            };\n            axios.post('transaction/place/buy', data).then(() => {\n              toast.success('Order Placed');\n              updateAll();\n            }).catch(error => {\n              toast.error(error.response.data.msg);\n              console.log(error);\n            });\n          } else {\n            toast.error(\"Insufficient Balance\");\n          }\n        }\n      } else {\n        users.map(userind3 => {\n          console.log(userind3, user);\n          if (userind3.user_id == parseInt(user)) {\n            checkNoOfStocks = userind3.stocks;\n          }\n        });\n        if (StockAmount <= checkNoOfStocks) {\n          console.log(StockAmount, checkNoOfStocks);\n          data = {\n            seller_id: user,\n            min_selling_price: orderType === 'Limit' ? PriceLim : -1,\n            stocks_quantity: StockAmount\n          };\n          axios.post('transaction/place/sell', data).then(() => {\n            toast.success('Order Placed');\n            updateAll();\n          }).catch(error => {\n            toast.error('An error occured');\n            console.log(error);\n          });\n        } else {\n          console.log(StockAmount, checkNoOfStocks);\n          toast.error(\"Insufficient Number of Stocks\");\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"BUY-OR-SELL\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Buy-OR-Sell\",\n      children: /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"buyorsell\",\n        onChange: () => {\n          changeTransactionType();\n        },\n        className: \"form-select\",\n        \"aria-label\": \"Default select example\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          selected: true,\n          children: \"Buy OR Sell\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Buy\",\n          children: \"Buy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Sell\",\n          children: \"Sell\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Select-User\",\n      children: /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"IdforselectUser\",\n        onChange: () => {\n          changeUser();\n        },\n        className: \"form-select\",\n        \"aria-label\": \"Default select example\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          selected: true,\n          children: \"Select a User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 9\n        }, this), users.map(user => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: user.user_id,\n          children: user.user_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 29\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Order-Type\",\n      children: /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"OrderType\",\n        onChange: () => {\n          changeOrderType();\n        },\n        className: \"form-select\",\n        \"aria-label\": \"Default select example\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Market\",\n          children: \"Market\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Limit\",\n          children: \"Limit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Stock/Price\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-control Stock-Amount-Input\",\n          type: \"text\",\n          value: StockAmount,\n          onChange: e => setStockAmount(e.target.value),\n          placeholder: \"Stock Amount\",\n          \"aria-label\": \"default input example\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: orderType === \"Limit\" ? /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-control Price-Limit-Input\",\n          type: \"text\",\n          value: PriceLim,\n          onChange: e => setPriceLim(e.target.value),\n          placeholder: \"Price\",\n          \"aria-label\": \"default input example\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 7\n        }, this) : \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleBuySell,\n      type: \"button\",\n      className: \"btn btn-success Place-Order-Button\",\n      children: \"Place order\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 5\n  }, this);\n}\n_s(BuyOrSell, \"XWcmPtsVYmikZlXfbvZj+PEICcY=\");\n_c = BuyOrSell;\nexport default BuyOrSell;\nvar _c;\n$RefreshReg$(_c, \"BuyOrSell\");","map":{"version":3,"names":["React","UserContext","useContext","useState","toast","axios","BuyOrSell","usercontext","users","orderBuy","updateAll","transactionType","setTransactionType","orderType","setOrderType","user","setUser","StockAmount","setStockAmount","PriceLim","setPriceLim","data","checkBalance","checkPrice","checkNoOfStocks","changeOrderType","document","getElementById","value","changeTransactionType","changeUser","handleBuySell","info","map","userind","user_id","parseInt","console","log","user_name","balance","buyer_id","max_buying_price","stocks_quantity","post","then","success","catch","error","response","msg","userind2","orderbuy","userind3","stocks","seller_id","min_selling_price","e","target"],"sources":["/Users/pratyushgarg/Downloads/Web Development/final-density/density-hack-an-intern-flexbox/front-end/src/components/OrderPage/BuyOrSell.js"],"sourcesContent":["import React from 'react'\nimport UserContext from '../../Context/UserContext';\nimport { useContext } from 'react';\nimport { useState } from 'react';\nimport {toast} from 'react-toastify'\nimport axios from 'axios';\n\nfunction BuyOrSell() {\n  const usercontext = useContext(UserContext);\n  const {users, orderBuy, updateAll} = usercontext;\n  const [transactionType, setTransactionType] = useState();\n  const [orderType, setOrderType] = useState(\"Market\");\n  const [user, setUser] = useState();\n  const [StockAmount, setStockAmount] = useState();\n  const [PriceLim, setPriceLim] = useState();\n//   const [data, setData] = useState({});\nlet data = {};\nlet checkBalance;\nlet checkPrice;\nlet checkNoOfStocks;\n  const changeOrderType = () =>{\n    setOrderType(document.getElementById(\"OrderType\").value);\n  }\n  const changeTransactionType = () =>{\n    setTransactionType(document.getElementById(\"buyorsell\").value);\n  }\n  const changeUser = () =>{\n    setUser(document.getElementById(\"IdforselectUser\").value);\n  }\n  const handleBuySell = () => {\n    if(!transactionType) toast.info('Please choose buy or sell.')\n    else if(!user) toast.info('Please choose a user for the transaction.')\n    else if(orderType === 'Limit' && !PriceLim) toast.info('Please set a price limit for Limit type transactions');\n    else if(!StockAmount) toast.info('Please provide a stock amount.')\n    else {\n      if(transactionType === 'Buy') {\n        if(orderType === \"Limit\"){\n            users.map((userind) => {\n                if(userind.user_id == parseInt(user)){\n                    console.log(userind.user_name);\n                    checkBalance = userind.balance;\n                }\n            })\n            if(checkBalance >= StockAmount*PriceLim){\n                    data = {\n                                buyer_id: user,\n                                max_buying_price: (orderType === 'Limit' ? PriceLim : -1),\n                                stocks_quantity: StockAmount\n                            }\n                    axios.post('transaction/place/buy', data)\n                    .then(() => {\n                        toast.success('Transaction Successful')\n                        updateAll()\n                    })\n                    .catch((error) => {\n                        toast.error(error.response.data.msg)\n                        console.log(error);\n                    });\n            }\n            else{\n                    toast.error(\"Insufficient Balanace\");\n            }\n        }\n        else if(orderType === \"Market\"){\n            users.map((userind2) => {\n                if(userind2.user_id == parseInt(user)){\n                    console.log(userind2.user_name);\n                    checkBalance = userind2.balance;\n                }\n            })\n            checkPrice = orderBuy[0].max_buying_price;\n            orderBuy.map(orderbuy => {\n                if(checkPrice < orderbuy.max_buying_price){\n                    checkPrice = orderbuy.max_buying_price;\n                }\n            })\n            if(checkBalance >= StockAmount*checkPrice){\n                data = {\n                                buyer_id: user,\n                                max_buying_price: orderType === 'Limit' ? PriceLim : -1,\n                                stocks_quantity: StockAmount\n                            }\n                    axios.post('transaction/place/buy', data)\n                    .then(() => {\n                        toast.success('Order Placed')\n                        updateAll()\n                    })\n                    .catch((error) => {\n                        toast.error(error.response.data.msg)\n                        console.log(error);\n                    });\n            }\n            else{\n                toast.error(\"Insufficient Balance\");\n            }\n        }\n      }\n      else {\n        \n            users.map((userind3) => {console.log(userind3, user)\n                if(userind3.user_id == parseInt(user)){\n                    checkNoOfStocks = userind3.stocks;\n                }\n            })\n            if(StockAmount <= checkNoOfStocks){console.log(StockAmount,checkNoOfStocks);\n                data = {\n                            seller_id: user,\n                            min_selling_price: orderType === 'Limit' ? PriceLim : -1,\n                            stocks_quantity: StockAmount\n                        }\n                axios.post('transaction/place/sell', data)\n                .then(() => {\n                    toast.success('Order Placed')\n                    updateAll()\n                })\n                .catch((error) => {\n                    toast.error('An error occured')\n                    console.log(error);\n                })\n            }\n        else{console.log(StockAmount,checkNoOfStocks);\n            toast.error(\"Insufficient Number of Stocks\")\n            }\n        \n      }\n    }\n\n  }\n  return (\n    <div className='BUY-OR-SELL'>\n      <div className=\"Buy-OR-Sell\">\n      <select id='buyorsell' onChange={()=>{changeTransactionType()}} className=\"form-select\" aria-label=\"Default select example\">\n        <option selected>Buy OR Sell</option>\n        <option value=\"Buy\">Buy</option>\n        <option value=\"Sell\">Sell</option>\n    </select>\n      </div>\n      <div className='Select-User'>\n      <select id=\"IdforselectUser\" onChange={()=>{changeUser()}} className=\"form-select\" aria-label=\"Default select example\">\n        <option selected>Select a User</option>\n        {\n          users.map(user => <option value={user.user_id}>{user.user_name}</option>\n          )\n        }\n    </select>\n      </div>\n      <div className=\"Order-Type\">\n      <select id=\"OrderType\" onChange={()=>{changeOrderType()}} className=\"form-select\" aria-label=\"Default select example\">\n        {/* <option selected>Order Type (Limit / Market)</option> */}\n        <option value=\"Market\">Market</option>\n        <option value=\"Limit\">Limit</option>\n    </select>\n      </div>\n      <div className='Stock/Price'>\n        <div>\n      <input className=\"form-control Stock-Amount-Input\" type=\"text\" value={StockAmount} onChange={(e) => setStockAmount(e.target.value)}  placeholder=\"Stock Amount\" aria-label=\"default input example\"></input></div>\n      <div>\n      {orderType === \"Limit\" ? \n      <input className=\"form-control Price-Limit-Input\" type=\"text\" value={PriceLim} onChange={(e) => setPriceLim(e.target.value)} placeholder=\"Price\" aria-label=\"default input example\">\n      </input> : \"\"}</div>\n      \n      </div>\n      <button onClick={handleBuySell} type=\"button\" className=\"btn btn-success Place-Order-Button\">Place order</button>\n    </div>\n  )\n}\n\nexport default BuyOrSell\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}